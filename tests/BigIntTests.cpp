#include "../BigInt.hpp"
#include <gtest/gtest.h>
#include <sstream>
#include <vector>
#include <array>

class BigIntTest: public ::testing::Test {
public:
    // Note: don't change values
    enum Operators: int { 
        PLUS = 0,
        MINUS,
        DIV,
        MULT,
        MOD, // get reminder not MODULO
        COUNT
    };

    BigIntTest(): 
        m_op1View {
            "19000002039493249238910000100010",
            "1009999132101",
            "100000001",
            "1100000001",
            "1432999871",
            "0",
            /// short:
            // neg and neg
            "-45678321430342300923048923094124330",
            // neg and pos
            "-45699999999900000048923094124330",
            // pos and pos
            "4567832143034230777777777777777777"
            "023428929384392482394890923048924330",
            /// long:
            // neg and neg
            "-19000002120001234100001000101200012341000010001012000"
            "123410000100010120001234100001000101200012341000010001"
            "012000123410000100010120001234100001000101000010001012"
            "000101200012341000010001001200012341000010001001200012"
            "000101200012341000010001001200012340001001200012341003"
            "000199999999012009950120000003410099939990034541231231"
            "123312656000912341342342340991000100103043021233423419"
            "213923948483249832948329483294832912203098209990012000",
            // neg and pos
            "19000002120001234100001000101200012341000010001012000"
            "012000123410000100010120001234100001000101000010001012"
            "012000123410000100010120001234100001000101000010001012"
            "000101200012341000010001001200012341000010001001200012"
            "000101200012341000010001001200012340001001200012341003"
            "000199999999012009950120000003410099939990034541231231"
            "123312656000912341342342340991000100103043021233423419"
            "000199999999012009950120000003410099939990034541231231"
            "123312656000912341342342340991000100103043021233423419"
            "213923948483249832948329483294832912203098209990012000",
            // pos and pos
            "19000002120001234100001000101200012341000010001012000"
            "123410000100010120001234100001000101200012341000010001"
            "012000123410000100010120001234100001000101000010001012"
            "000101200012341000010001001200012341000010001001200012"
            "000101200012341000010001001200012340001001200012341003"
            "000199999999012009950120000003410099939990034541231231"
            "123312656000912341342342340991000100103043021233423419"
            "213923948483249832948329483294832912203098209990012000"
            "123410000100010120001234100001000101200012341000010001"
            "012000123410000100010120001234100001000101000010001012"
            "000101200012341000010001001200012341000010001001200012"
            "000101200012341000010001001200012340001001200012341003"
            "000199999999012009950120000003410099939990034541231231"
            "123312656000912341342342340991000100103043021233423419"
            "213923948483249832948329483294832912203098209990012000"
            "123410000100010120001234100001000101200012341000010001"
            "012000123410000100010120001234100001000101000010001012"
            "000101200012341000010001001200012341000010001001200012"
            "000101200012341000010001001200012340001001200012341003"
            "000199999999012009950120000003410099939990034541231231"
            "123312656000912341342342340991000100103043021233423419"
            "213923948483249832948329483294832912203098209990012000"
        }, 
        m_op2View {
            "1900000212000123410000100010",
            "10001",
            "11",
            "1100012300001",
            "2",
            "123456724302193123000",
            /// short:
            // neg and neg
            "-456783000100707000042300923048923094124330",
            // neg and pos
            "9230489230944355555555050050123112322124330",
            // pos and pos
            "891831273843261234417234434545564367675760"
            "1293893498723432482343242341230489243303249",
            /// long:
            // neg and neg
            "-1234100001000101200012341000010001012000123410010001"
            "012000123410000100010120001234100001000101000010001012"
            "239848371928349274823647126738274832472384723847328478"
            "000101200012341000010001001200012340001001200012341003"
            "123312656000912341342342340991000100103043021233423419"
            "213923948483249832948329483294832912203098209990012000",
            // neg and pos
            "31200012341000010001012000123410000100010100001000101"
            "000101200012341000010001001200012341000010001001200012"
            "000101200012341000010001001200012340001001200012341003"
            "109310283912391238294887348743824718273465832471894394"
            "1274y8545094303000000237487412300403024348912312344343"
            "124901827416438245612302392184837576749559949738472333"
            "000199999999012009950120000003410099939990034541231231"
            "123312656000912341342342340991000100103043021233423419"
            "000199999999012009950120000003410099939990034541231231"
            "123312656000912341342342340991000100103043021233423419"
            "213923948483249832948329483294832912203098209990012000",
            // pos and pos
            "19000002120001234100001000101200012341000010001012000"
            "123410000100010120001234100001000101200012341000010001"
            "012000123410000100010120001234100001000101000010001012"
            "000101200012341000010001001200012341000010001001200012"
            "000101200012341000010001001200012340001001200012341003"
            "000199999999012009950120000003410099939990034541231231"
            "123312656000912341342342340991000100103043021233423419"
            "213923948483249832948329483294832912203098209990012000"
            "123410000100010120001234100001000101200012341000010001"
            "109310283912391238294887348743824718273465832471894394"
            "1274y8545094303000000237487412300403024348912312344343"
            "124901827416438245612302392184837576749559949738472333"
            "000199999999012009950120000003410099939990034541231231"
            "123312656000912341342342340991000100103043021233423419"
            "000199999999012009950120000003410099939990034541231231"
            "012000123410000100010120001234100001000101000010001012"
            "000101200012341000010001001200012341000010001001200012"
            "000101200012341000010001001200012340001001200012341003"
            "000199999999012009950120000003410099939990034541231231"
            "123312656000912341342342340991000100103043021233423419"
            "213923948483249832948329483294832912203098209990012000"
            "123410000100010120001234100001000101200012341000010001"
            "012000123410000100010120001234100001000101000010001012"
            "000101200012341000010001001200012341000010001001200012"
            "000101200012341000010001001200012340001001200012341003"
            "000199999999012009950120000003410099939990034541231231"
            "123312656000912341342342340991000100103043021233423419"
            "213923948483249832948329483294832912203098209990012000"
        }
    {
        const auto mulResult = {
            "36100007903039950716751432891031564805088725623210002000100",
            "10101001320142101",
            "1100000011",
            "1210013531101112300001",
            "2865999742",
            "0",
            "20865080702516173960750773496589766082196736866016542540651878052569497948900",
            "-421833357853234000417355445194175869813223231766824675439653431286737948900",
            "4073735558824411888667102477874275436536411659939331174387010433994446026530459316603091506782822286890215240800",
            "23447902635295447923261491476135809911670981039447305710153551018424894411425919171429227229653702983442969214654885402414145804450995746626247821379241598424287303318243132531333543629809189409909706976615035586803927614134255504577661841594479837643127530634656899760874879448293339976474682327331769071627044048332930036195888435381042503114533761431815329268214946329255419618488693203652346857774513672470937012315768128927723436203630685900219789695488999845139396946042923806035117323143540998829514064458874960519241072685744113750545857185702002621770470330328271369083588202444650123157082724426914983962435757209491619837271067428585070372828879648461324467006223924206772527839074329510417923520430234847635526340651035010157139760144000000",
            "59280030062306485687451043577235514639729904873689641142842971662405322703597711875289051583154774112646904788033552596638169217541610850369531114958403898481163393062373514388669498933912141590118358059868694319409609389722712547671700818169242589612059734570140878188896657087413778472036719495560224992381416890991546514375786504203392852568438311994001832999920454906257485488800204112703050441784678778220763276926796986819389514019044814866005148080983649269704771198586321332639083177326193664398489559644735261635539386688294011652308772399580277888298027805351370676757479205892804803728584047205157649366276627007133128087810069357699943358852043197213734265911071885181804437432129572035697868370527811526580415049878504455582844317530335918559265853551455100111835128535602434851276903847046797300123302926354565066708688526222488542697834729320290925140320241994547949401550653291736282628834206954568770789311700110730141540482951034043060375321426979749824992404397192968288163418483326605733854595470164585070372828879648461324467006223924206772527839074329510417923520430234847635526340651035010157139760144000000",
            "36100008056005139020527058937284371051450248874916087547126952271604593313837394020544600257522035185183731545819056964301620170890628935767514030262470664042164639449396203628241351798859976844499738484897214905706624173712925686939044000508793648016605304750421927142339361299002199842919746239392943925018155945104003550410345715975531620840339581447419173163660093865713641396585005823077378227004162722824280513584874138523159473663368269962149964522855727493119874366206722093877394165838329445725757061156535348786803171584536274287805475509458644131343937182019116652053712547756697834926107522755710240543321652295085474734484783446101975301490285043678292908515390902793539408356034623529155901339733278642375867591212881779717221248855259514650251971733909484688546843266197935716178230927974084253181480084245779668660784407112617920193970851425422877507608736052200018046353694558637486813447749199679012135134858258612703887569494079307578443821836633351524251344017809105584553595902767338464423352014705215958483818543652648389997250285926547346315181121198926057314210831307885656949385841307596267050676095178965297017995389215137617264509814041381751798609555541705585728971487327956947065769102187940689560064767197060320095346866165927171672327167161687060252596094810707061376223654996458849887443126167318923848817109780971587854287399614407209769297947256795961651920536300290165718015281274627495991386592790433644697927024686100753693152053662443513572934388755762887445787484186259962155484218127958745238414900397267944148935323726343802852052796682919887956221470029471260994727553261321985682500730525442383773151783925672712665636906256276319964887240688470420055999566183158232896456891646724499236477285621365420583394605325527852984215863537932917254219588878142393311382354895093854877944678048730681932654559418174509101844150258168575038186051142725497682117484143512318650986741012288823534396993264971277407336865087276814412444920333800492636447376602765268895716602316982652302185671034859764740978046273041447645303497073331342787793342460351323261767155868043653025078453269893873360773483816836955291624290507200843188586793706068688904973886678011784817306183829546601617131859956791597139631408097322995360186272444680729147665730621745692350177914378334953429201859369101441404546433123851244206114523784127356077627765678535959773567537486879797155435650718521936458067990805707648617060925866509923212454561904026933396287330879889428589489132734733203804926973997940576936943768995749824992404397192968288163418483326605733854595470164585070372828879648461324467006223924206772527839074329510417923520430234847635526340651035010157139760144000000"
        };
        const auto divResult = {
            "9999",
            "100989814",
            "9090909",
            "0",
            "716499935",
            "0",
            "0",
            "0",
            "5121856876973597028361463507",
            "15395836726848585458460139003882558001823392823235060725251313504007277193737541897446126693564481924644444547",
            "0",
            "0"
        };
        const auto minusResult = {
            "18998102039281249115500000000000",
            "1009999122100",
            "99999990",
            "-1098912300000",
            "1432999869",
            "-123456724302193123000",
            "456782954422385569700000000000000000000000",
            "-9230489230990055555554950050172035416248660",
            "4567832143034230777777777776885945749585668149975247960345358681248570",
            "-19000002120001234100001000101200012341000010001012000123410000100010120001234100001000101200012341000010001010766023408999998810107660234089999988100876599991010988101076602340899999880999965912339999909000991198999760252828083991725186353874461737507528616476165012525000098799986671009940118998803397759938988834528890228000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",


        };
        const auto plusResult = {
            "19001902039705249362320000200020",
            "1009999142102",
            "100000012",
            "1101112300002",
            "1432999873",
            "123456724302193123000",
            "-456783045779028430384601846097846188248660",
            "9230489230898655555555150050074189228000000",
            "4567832143034230777777777778669608297272190"
            "618809716829436487416600090",
            "-190000021200012341000010001012000123410000"
            "1000101200012341000010001012000123410000100"
            "0101200012341000010001013234223411000201210"
            "1323422341100020121011234200110130121013234"
            "2234110002012100243411234200011100101120102"
            "4239949571940690274833648127938287172473385"
            "9238596694810003012000113530099601210012034"
            "2243994099123455357223424662531200182468268"
            "4684681982000200206086042466846838427847896"
            "966499665896658966589665824406196419980024000",
            "3120001234100001000101200012341000010001010"
            "0001000101190101221212353341010011002212012"
            "4644100101010113200121201024341123420001112"
            "0101354101235000201120011235112322931151801"
            "2392238396087361084824728274475832571904514"
            "1284974510664400001023848861231274402435891"
            "3313544355125003027428779245622303393384849"
            "9167505611497508133360003999999980240199002"
            "4000000682019987998006908246246224662531200"
            "1824682684684681982000200206086042466846838"
            "0003999999980240199002400000068201998799800"
            "6908246246224662531200182468268468468198200"
            "0200206086042466846838427847896966499665896"
            "658966589665824406196419980024000",
            "1900000212000123410000100010120001234100001"
            "0001012000123410000100010120001234100001000"
            "1012000123410000100010120001234100001000101"
            "2000123410000100010100001000101200010120001"
            "2341000010001001200012341000010001001200012"
            "0001012000123410000100010012000123400010012"
            "0001234100300019999999901200995012000000341"
            "0099939990034541231231313312677200924682342"
            "3523420030002235130431212435434204480239494"
            "8335103296067048330483392420322161999011201"
            "0243411234200011120102434112342000111201022"
            "3411000201211103222840358012383948973607439"
            "4812827356584248389451412849745106644000010"
            "2384886123127430253501123246853461251018274"
            "1545025556242239218824767668954998427970356"
            "4123512655999924351292462340994410200043033"
            "0557746546503372366044841621742906718242858"
            "3301230614123122343541912361000009902212995"
            "1354100004410201140002375541241232024000246"
            "8200002000202400024682000020002020000200020"
            "2400020240002468200002000200240002468200002"
            "0002002400024000202400024682000020002002400"
            "0246800020024000246820060003999999980240199"
            "0024000000682019987998006908246246224662531"
            "2001824682684684681982000200206086042466846"
            "8384278478969664996658966589665896658244061"
            "9641998002400024682000020002024000246820000"
            "2000202400024682000020002024000246820000200"
            "0202400024682000020002020000200020240002024"
            "0002468200002000200240002468200002000200240"
            "0024000202400024682000020002002400024680002"
            "0024000246820060003999999980240199002400000"
            "0682019987998006908246246224662531200182468"
            "2684684681982000200206086042466846838427847"
            "896966499665896658966589665824406196419980024000"

        };
        const auto modResult = {
            "1899919704015262319000100020",
            "2287",
            "2",
            "1100000001",
            "1",
            "0",
            "-456783045779028430384601846097846188248660",
            "9230489230898655555555150050074189228000000",
            "744712899985821230962901543615325400434010",
            "-1819077238602198922068629521563478847331135856917062490360925763193669086406502385443065551791918084596143876233070606565490522168725580198986698778153528664390450202866838670192303619209488886857868666913234030187492191979761968480610629861705624305165145894534223505664627102389713305779220730117815431929584262115460000",


        };

        size_t i { 0 };
        for(const auto& str: mulResult) {
            m_resultView[MULT][i++] = str;
        }
        i = 0;

        for(const auto& str: divResult) {
            m_resultView[DIV][i++] = str;
        }
        i = 0;

        for(const auto& str: plusResult) {
            m_resultView[PLUS][i++] = str;
        }
        i = 0;

        for(const auto& str: minusResult) {
            m_resultView[MINUS][i++] = str;
        }
        i = 0;

        for(const auto& str: modResult) {
            m_resultView[MOD][i++] = str;
        }
    }


    // Sets up the test fixture.
    void SetUp() override {

    }

    // Tears down the test fixture.
    void TearDown() override {
        
    }

protected:
    static constexpr size_t SIZE { 12 };

    using view          = std::array<std::string, SIZE>;
    using const_view    = const view;

    const_view m_op1View;
    const_view m_op2View;
    
    std::array<view, Operators::COUNT> m_resultView;
};

TEST_F(BigIntTest, ConstructWithAllIntegers) {
    // data preparation:
    std::array<BigInt, SIZE> integers;
    for(size_t i = 0; i < SIZE; i++) {
        integers[i] = BigInt{ m_op1View[i] };
    }
    // tests
    
    for(size_t i = 0; i < SIZE; i++) {
        // clear stream
        std::stringstream ss;
        // add big integer to stream
        ss << integers[i];
        // compare with input string
        EXPECT_EQ(ss.str(), m_op1View[i]) << "i = " << i;
    }
}

TEST_F(BigIntTest, MultiplyWithBigIntOperand)
{
   
}

TEST_F(BigIntTest, SubtractWithBigIntOperand)
{
    
}

TEST_F(BigIntTest, DivideWithBigIntOperand)
{
    
}

TEST_F(BigIntTest, AddWithBigIntOperand)
{
    
}

TEST_F(BigIntTest, ModWithBigIntOperand)
{
    
}

/// Zero division exception

/// Negative arguments